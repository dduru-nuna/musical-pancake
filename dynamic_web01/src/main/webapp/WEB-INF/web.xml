<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="https://jakarta.ee/xml/ns/jakartaee" xmlns:web="http://xmlns.jcp.org/xml/ns/javaee" xsi:schemaLocation="https://jakarta.ee/xml/ns/jakartaee https://jakarta.ee/xml/ns/jakartaee/web-app_5_0.xsd" id="WebApp_ID" version="5.0">
  <display-name>dynamic_web01</display-name>
  <!-- annotation 실행을 위해 주석처리함 -->
  <!--servlet>
  	<servlet-name>mainController</servlet-name>
  	<servlet-class>controller.MainController</servlet-class>
  </servlet>
  <servlet-mapping>
  	<servlet-name>mainController</servlet-name>
  	<url-pattern>/main</url-pattern>
  </servlet-mapping -->
  
  <servlet>
  	<servlet-name>visitController</servlet-name>
  	<servlet-class>controller.VisitController</servlet-class>
  </servlet>
  <servlet-mapping>
  	<servlet-name>visitController</servlet-name>
  	<url-pattern>/visit</url-pattern>
  </servlet-mapping>
  
  <servlet>
  	<servlet-name>VisitUpdateController</servlet-name>
  	<servlet-class>controller.VisitUpdateController</servlet-class>
  </servlet>
  <servlet-mapping>
  	<servlet-name>VisitUpdateController</servlet-name>
  	<url-pattern>/visit/update</url-pattern>
  </servlet-mapping>
  
  <servlet>
  	<servlet-name>VisitDeleteController</servlet-name>
  	<servlet-class>controller.VisitDeleteController</servlet-class>
  </servlet>
  <servlet-mapping>
  	<servlet-name>VisitDeleteController</servlet-name>
  	<url-pattern>/visit/delete</url-pattern>
  </servlet-mapping>
  
  <servlet>
  	<servlet-name>BookmarkController</servlet-name>
  	<servlet-class>controller.BookmarkController</servlet-class>
  </servlet>
  <servlet-mapping>
  	<servlet-name>BookmarkController</servlet-name>
  	<url-pattern>/bookmark</url-pattern>
  </servlet-mapping>
  
  <servlet>
  	<servlet-name>BookmarkUpdateController</servlet-name>
  	<servlet-class>controller.BookmarkUpdateController</servlet-class>
  </servlet>
  <servlet-mapping>
  	<servlet-name>BookmarkUpdateController</servlet-name>
  	<url-pattern>/bookmark/update</url-pattern>
  </servlet-mapping>
  
  <servlet>
  	<servlet-name>BookmarkDeleteController</servlet-name>
  	<servlet-class>controller.BookmarkDeleteController</servlet-class>
  </servlet>
  <servlet-mapping>
  	<servlet-name>BookmarkDeleteController</servlet-name>
  	<url-pattern>/bookmark/delete</url-pattern>
  </servlet-mapping>
    
  <servlet>
  	<servlet-name>JoinController</servlet-name>
  	<servlet-class>controller.JoinController</servlet-class>
  </servlet>
  <servlet-mapping>
  	<servlet-name>JoinController</servlet-name>
  	<url-pattern>/join</url-pattern>
  </servlet-mapping>
  
  <servlet>
  	<servlet-name>LoginController</servlet-name>
  	<servlet-class>controller.LoginController</servlet-class>
  </servlet>
  <servlet-mapping>
  	<servlet-name>LoginController</servlet-name>
  	<url-pattern>/login</url-pattern>
  </servlet-mapping>
  
   <servlet>
  	<servlet-name>LogoutController</servlet-name>
  	<servlet-class>controller.LogoutController</servlet-class>
  </servlet>
  <servlet-mapping>
  	<servlet-name>LogoutController</servlet-name>
  	<url-pattern>/logout</url-pattern>
  </servlet-mapping>
  
  <servlet>
  	<servlet-name>MyinfoController</servlet-name>
  	<servlet-class>controller.MyinfoController</servlet-class>
  </servlet>
  <servlet-mapping>
  	<servlet-name>MyinfoController</servlet-name>
  	<url-pattern>/myinfo</url-pattern>
  </servlet-mapping>
  
  <!--  파일 업로드 web.xml 작성법
  <servlet>
  	<servlet-name>imageUploadController</servlet-name>
  	<servlet-class>controller.ImageUploadController</servlet-class>
  	<multipart-config>
  		<location>D:/imageTemp</location>  이미지가 업로드될 임시 저장 경로 
   		<max-file-size>1048576</max-file-size>  단일 파일 이미지 제한 크기(바이트단위크기)
  		<max-request-size>1048576</max-request-size>  요청에 대한 전체 크기. 제한 두고 싶지 않으면 -1 작성 
  		<file-size-threshold>1024</file-size-threshold>  파일은 메모리에 먼저 저장되는데 여기서 설정한 크기를 넘어가면 location(임시저장경로)에 저장된다. 작성하지 않으면 메모리상에 남아지게됨 
  	</multipart-config>
  </servlet>
  <servlet-mapping>
  	<servlet-name>imageUploadController</servlet-name>
  	<url-pattern>/myinfo/uploadImage</url-pattern>
  </servlet-mapping>
  -->
 
  <!-- 프로젝트에 전역 설정 -->
  <context-param>
  	<param-name>maxFileSize</param-name>
  	<param-value>10485760</param-value>
  </context-param>
  <context-param>
  	<param-name>permitFileType</param-name>
  	<param-value>image</param-value>
  </context-param>
  <context-param>
  	<param-name>permitFileExt</param-name>
  	<param-value>png,jpeg</param-value>
  </context-param>
  
  <!--
  <listener>        패키지명.클래스명
  	<litener-class>listener.MyServletContextListener</litener-class>
  </listener>
  -->
  
  <!--
  <filter>  필터의 순서가 중요할 경우 web.xml에 작성하여 순서 제어. 아니면 어노테이션 하면 됨
  	<filter-name>loggingFilter</filter-name>
  	<filter-class>filter.LoggingFilter</filter-class>
  </filter>
  <filter-mapping>
  	<filter-name>loggingFilter</filter-name>
  	<url-pattern>/*</url-pattern>
  </filter-mapping>
  -->
  
  <!--error-page> 프로젝트 완료 후 배포할 때 필요한 에러페이지 만들기
  	<error-code>404</error-code>
  	<location>/WEB-INF/view/error/404.jsp</location>
  </error-page-->
  
  <!--error-page> 오류 화면의 '예외' 바로 밑에 있는 exception-type을 설정
  	<exception-type>java.io.IOException</exception-type>
  	<location>/WEB-INF/view/error/IOException.jsp</location>
  </error-page-->
  
  <welcome-file-list>
    <welcome-file>index.html</welcome-file>
    <welcome-file>index.jsp</welcome-file>
    <welcome-file>index.htm</welcome-file>
    <welcome-file>default.html</welcome-file>
    <welcome-file>default.jsp</welcome-file>
    <welcome-file>default.htm</welcome-file>
  </welcome-file-list>
</web-app>
